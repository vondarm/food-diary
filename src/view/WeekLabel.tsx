import dayjs from "dayjs";import {type ReactNode, useMemo} from "react";import {useAverageKcalForWeek} from "./CoreAdapter.tsx";import { Alert } from "@mui/material";import type { AlertProps } from "@mui/material/Alert";import {  getDayOvereatingLevel,  type OvereatingLevel,} from "../core/meals/overeatingLevel.ts";import ReportProblemIcon from "@mui/icons-material/ReportProblem";import RestaurantMenuIcon from "@mui/icons-material/RestaurantMenu";import CheckCircleIcon from "@mui/icons-material/CheckCircle";export const WeekLabel = () => {  const today = useMemo(() => dayjs().startOf("day"), [])  const averageKcalForWeek = Math.round(useAverageKcalForWeek(today));  const overeatingLevel = getDayOvereatingLevel(averageKcalForWeek, 2500);  return (    <Alert      style={{ alignItems: "center" }}      icon={getIconByOvereatingLevel(overeatingLevel)}      severity={getDayColorByOvereatingLevel(overeatingLevel)}    >      {getWeekDescriptionByOvereatingLevel(overeatingLevel, averageKcalForWeek)}    </Alert>  );};const getDayColorByOvereatingLevel = (  level: OvereatingLevel,): AlertProps["severity"] => {  switch (level) {    case "low":      return "info";    case "normal":      return "success";    case "high":      return "warning";    case "extra high":      return "error";    case "incredible":      return "error";  }};const getIconByOvereatingLevel = (level: OvereatingLevel): ReactNode => {  switch (level) {    case "low":      return <RestaurantMenuIcon />;    case "normal":      return <CheckCircleIcon />;    case "high":      return <ReportProblemIcon />;    case "extra high":      return "üê∑";    case "incredible":      return "üê∑";  }};const getWeekDescriptionByOvereatingLevel = (  level: OvereatingLevel,  kcal: number,): string => {  switch (level) {    case "low":      return `–í —Å—Ä–µ–¥–Ω–µ–º ${kcal} –∫–∫–∞–ª –≤ –¥–µ–Ω—å. –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –º—ã –Ω–µ–¥–æ–µ–¥–∞–µ–º, –º–æ–∂–Ω–æ –ø–æ–¥–Ω–∞–∂–∞—Ç—å`;    case "normal":      return `–í —Å—Ä–µ–¥–Ω–µ–º ${kcal} –∫–∫–∞–ª –≤ –¥–µ–Ω—å. –ù–µ–¥–µ–ª—è –∏–¥–µ—Ç —Ö–æ—Ä–æ—à–æ, –±–ª–∏–∑–∫–æ –∫ –Ω–æ—Ä–º–µ`;    case "high":      return `–í —Å—Ä–µ–¥–Ω–µ–º ${kcal} –∫–∫–∞–ª –≤ –¥–µ–Ω—å. –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –º—ã –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–µ–¥–∞–µ–º, –Ω–∞–¥–æ —É–∂–∞—Ç—å—Å—è`;    case "extra high":      return `–í —Å—Ä–µ–¥–Ω–µ–º ${kcal} –∫–∫–∞–ª –≤ –¥–µ–Ω—å. –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –º—ã —Å–∏–ª—å–Ω–æ –ø–µ—Ä–µ–µ–¥–∞–µ–º, –ø–æ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è`;    case "incredible":      return `–í —Å—Ä–µ–¥–Ω–µ–º ${kcal} –∫–∫–∞–ª –≤ –¥–µ–Ω—å. –≠—Ç—É –Ω–µ–¥–µ–ª—é –ø—Ä–∏–¥–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ–ª–≥–æ`;  }};